# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: 'vmagent'


stages:
- stage: nuget
  jobs:
    - job: install_nuget
      steps:
      - task: NuGetToolInstaller@1
      
- stage: Build
  jobs:
  - job: Build_and_Publish
    steps:
    - task: UseDotNet@2  # Use the appropriate .NET task for your project
      inputs:
        version: '8.x'  # Adjust version based on your .NET framework
        includePreviewVersions: true  # Optional for preview versions

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.sln'
        feedsToUse: 'select'
        vstsFeed: '2a93c494-1bcb-4361-83ff-e7a3ed8717be/35fa5991-2e60-4399-843a-5b2236285c7e'    

    - task: DotNetCoreCLI@2  # Use the appropriate task for building
      inputs:
        command: 'build'
        configuration: $(buildConfiguration)
        projects: '**/*.csproj'  # Adjust project path if needed

    - task: DotNetCoreCLI@2  # Use the appropriate task for publishing
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1  # Publish build artifacts
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'dotnet-app'

- stage: Deploy
  jobs:
  - job: Deploy_to_VM
    steps:
     - task: DownloadPipelineArtifact@1  # Download build artifacts
       inputs:
        artifactName: 'dotnet-app'
        targetPath: '$(System.DefaultWorkingDirectory)/app'

     - script: |  # Script to deploy on VM (replace with your specific commands)
        sudo apt-get update
        sudo apt-get install -y nginx  # Example: Install web server
        sudo cp -r $(System.DefaultWorkingDirectory)/app/* /var/www/html/  # Example: Copy files
        sudo systemctl restart nginx  # Example: Restart web server
        
- stage: Publish_to_Blob  # Rename this stage if needed

  jobs:
  - job: Copy_Zip_to_Blob
    steps:
     - script: |  # Bash script to copy the zip file
          # Copy the zip file to Azure Blob storage using azcopy
          sudo azcopy copy '/var/www/html/*.zip' 'https://dotapp.blob.core.windows.net/appproj' --recursive=false
        